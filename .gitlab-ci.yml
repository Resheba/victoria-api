stages:
  - tests
  - build
  - trigger

variables:
  CONTAINER: $CI_PROJECT_NAME
  IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME

before_script:
  - echo $CI_JOB_TOKEN | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  
ruff_test:
  tags:
    - dev
  stage: tests
  before_script:
    - curl -sSL https://install.python-poetry.org | python3 -
    - export PATH="$HOME/.local/bin:$PATH"
    - poetry install
  script:
    - poetry run ruff check

mypy_test:
  tags:
    - dev
  stage: tests
  before_script:
    - poetry install
  script:
    - curl -sSL https://install.python-poetry.org | python3 -
    - export PATH="$HOME/.local/bin:$PATH"
    - poetry run mypy

pytest_test:
  tags:
    - dev
  stage: tests
  before_script:
    - poetry install
  script:
    - curl -sSL https://install.python-poetry.org | python3 -
    - export PATH="$HOME/.local/bin:$PATH"
    - poetry run pytest

api_build:
  tags:
    - dev
  stage: build
  image: docker:26.0.0
  services:
    - docker:26.0.0-dind
  script:
    - docker build -t $CI_PROJECT_NAMESPACE -f Dockerfile .
    - docker tag $CI_PROJECT_NAMESPACE $IMAGE
    - docker push $IMAGE

deploy_trigger:
  stage: trigger
  variables:
    UPSTREAM_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE
  trigger: $CD_NAMESPACE
  only:
    - main
